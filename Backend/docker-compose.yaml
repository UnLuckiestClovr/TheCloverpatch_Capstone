networks:
  cloverpatch-network:

services:
  eurekaregistry:
    restart: always
    networks:
      - cloverpatch-network
    ports:
      - 10000:8761
    container_name: CloverpatchEureka
    image: steeltoeoss/eureka-server

  ocelot:
    restart: always
    depends_on:
      - eureka-registry
    networks:
      - cloverpatch-network
    ports:
      - 10001:5000
    container_name: CloverpatchOcelotGateway
    build: 
      context: ./apigateway-ocelot-dotnet8
      dockerfile: Dockerfile
  
  # Basket and Order Service Setup
  basketandorderdatabase:
    restart: always
    networks:
      - cloverpatch-network
    ports:
      - 11000:6379
      - 11001:8001
    container_name: CloverpatchBasketAndOrderDatabase
    image: redis/redis-stack:latest

  basketservice:
    depends_on:
      - eurekaregistry
      - ocelot
      - basketandorderdatabase
    restart: always
    networks:
      - cloverpatch-network
    ports:
      - 12000:8080
    build: 
      context: ./Backend/BasketService
      dockerfile: Dockerfile
    environment:
      - EUREKA_HOST=CloverpatchEureka
  
  orderservice:
    depends_on:
      - eurekaregistry
      - ocelot
      - basketandorderdatabase
    restart: always
    networks:
      - cloverpatch-network
    ports:
      - 12001:8080
    build: 
      context: ./Backend/OrderService
      dockerfile: Dockerfile
    environment:
      - EUREKA_HOST=CloverpatchEureka

  # Flower and Cafe Product Service
  productdatabase:
    restart: always
    container_name: CloverpatchProductDatabase
    image: mongo
    networks:
      - cloverpatch-network
    ports:
      - 11002:27017
  
  flowerservice:
    depends_on:
      - eurekaregistry
      - ocelot
      - productdatabase
    restart: always
    container_name: CloverpatchFlowerService
    networks:
      - cloverpatch-network
    ports:
      - 12002:8080
    build: 
      context: ./Backend/FlowerService
      dockerfile: Dockerfile
    environment:
      - EUREKA_HOST=CloverpatchEureka

  # User Service Setup
  userdatabase:
    restart: always
    container_name: CloverpatchUserDatabase
    image: mcr.microsoft.com/mssql/server:2019-latest
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: "Nc220370979"
    ports:
      - "11003:1433"
    networks:
      - ecommerce_webwork
  
  userservice:
    depends_on:
      - eurekaregistry
      - ocelot
      - basketdatabase
    restart: always
    container_name: CloverpatchUserService
    networks:
      - cloverpatch-network
    ports:
      - 12004:8080
    build: 
      context: ./Backend/UserService
      dockerfile: Dockerfile
    environment:
      - EUREKA_HOST=CloverpatchEureka